#include <iostream>
#include <math.h>
using namespace std;

//To print the board
void PrintB(int B[][9], int n)
{
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n;j++)
        {
            cout<<B[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;
}

bool isValid(int B[][9], int x, int y, int n)
{
    //Row
    for(int i = 0; i<n; i++)
        if(B[x][i] == num )
            return false;
    
    //Coloumn
    for(int i = 0; i<n; i++)
        if(B[i][y] == num )
            return false;

    //SubGrid
    int rn = sqrt(n);
    int sx = x-x%rn;
    int sy = y-y%rn;

    for(int i=sx;i<sx+rn; i++)
    {
        for(int j = sy; j<sy+rn; j++)
        {
            if(B[i][j] == num)
            return false;
        }
    }
    return true;
}   

void SudokuSolver(int B[][9], int x, int y, int n)
{
    if(x==n)
        PrintB(B,n);
        return true;
    
    // if we move out of the bored.
    if(y==n)
    {
        return SudokuSolver(B,x+1,0,n);
    }
    //Its filled already
    if(B[x][y]!=0)
    {
        return SudokuSolver(B,x,y+1,n):
    }
    //Filling correct number
    for(int num=1; num<=9; num++)
    {
        if(isValid(B,x,y,num))
            B[x][y] = num;
            SudokuSolver(B,i,j+1,n);
            bool Ans = SudokuSolver(B,x,y+1,n);
            if (Ans)
            {
                return true;
            }
            
            B[x][y]=0;
    }
    return false;
}

int main()
{
    int n=9;
    //enter your sudoku here
    int B[9][9] = {};
    SudokuSolver(B,0,0,n);
    return 0;

}
